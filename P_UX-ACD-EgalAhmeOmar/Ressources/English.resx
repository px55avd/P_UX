<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnAirportticket" xml:space="preserve">
    <value>Airport</value>
  </data>
  <data name="btnBack" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="btnBackinHeader" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="btnBasicTickets" xml:space="preserve">
    <value>Standard Tickets</value>
  </data>
  <data name="btnChessydisneyTicket" xml:space="preserve">
    <value>Chessy Disney Paris</value>
  </data>
  <data name="btnDeutshinFirstpage" xml:space="preserve">
    <value>Deutsh</value>
  </data>
  <data name="btnDeutshinFooter" xml:space="preserve">
    <value>Deutsh</value>
  </data>
  <data name="btnDonthaveNavigo" xml:space="preserve">
    <value>You do not have a Navigo card. Push here.</value>
  </data>
  <data name="btnDownreducedPrice" xml:space="preserve">
    <value>Less</value>
  </data>
  <data name="btnDownstandardPrice" xml:space="preserve">
    <value>Less</value>
  </data>
  <data name="btnEnglishinFirstpage" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="btnEnglishinFooter" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="btnFrenchinFooter" xml:space="preserve">
    <value>Français</value>
  </data>
  <data name="btnItalianinFirstpage" xml:space="preserve">
    <value>Italino</value>
  </data>
  <data name="btnItalianinFooter" xml:space="preserve">
    <value>Italino</value>
  </data>
  <data name="btnNextpurchase" xml:space="preserve">
    <value>Next Purchase</value>
  </data>
  <data name="btnNoforReceipt" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="btnParisvisite" xml:space="preserve">
    <value>Paris Visite</value>
  </data>
  <data name="btnPasstoFrench" xml:space="preserve">
    <value>Passer, Vous êtes déjâ en français</value>
  </data>
  <data name="btnPay" xml:space="preserve">
    <value>Pay</value>
  </data>
  <data name="btnPlacenavigoPass" xml:space="preserve">
    <value>Deposite your Navigo card.</value>
  </data>
  <data name="btnSpanishinFirstpage" xml:space="preserve">
    <value>Español</value>
  </data>
  <data name="btnSpanishinFooter" xml:space="preserve">
    <value>Español</value>
  </data>
  <data name="btnSpecialtickets" xml:space="preserve">
    <value>Special Tickets</value>
  </data>
  <data name="btnStopInFooter" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="btnUpreducedPrice" xml:space="preserve">
    <value>More</value>
  </data>
  <data name="btnUpstandardPrice" xml:space="preserve">
    <value>More</value>
  </data>
  <data name="btnValidatorcard" xml:space="preserve">
    <value>Valid</value>
  </data>
  <data name="btnValidatorcoinsAndnotes" xml:space="preserve">
    <value>Valid</value>
  </data>
  <data name="btnValidatorgooglePay" xml:space="preserve">
    <value>Valid</value>
  </data>
  <data name="btnValidatorInfos" xml:space="preserve">
    <value>Valid</value>
  </data>
  <data name="btnYesforReceipt" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="currentTotalprice" xml:space="preserve">
    <value>Total prices :</value>
  </data>
  <data name="lblAcceptedbankCards" xml:space="preserve">
    <value>Bank cards accepted :</value>
  </data>
  <data name="lblAcceptedcoinsAndnotes" xml:space="preserve">
    <value>Coins and notes accepted :</value>
  </data>
  <data name="lblDeutshlangage" xml:space="preserve">
    <value>Deutsh</value>
  </data>
  <data name="lblEnglishLangage" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="lblItalianlangage" xml:space="preserve">
    <value>Italino</value>
  </data>
  <data name="lblNumberreducedTickets" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="lblnumberSpecialTicket" xml:space="preserve">
    <value>Number of Special Tickets :</value>
  </data>
  <data name="lblNumberstandardTickets" xml:space="preserve">
    <value>0</value>
  </data>
  <data name="lblRadiobuttonTypeticket" xml:space="preserve">
    <value>Type of pricing :</value>
  </data>
  <data name="lblReducedprice" xml:space="preserve">
    <value>Reduced price :</value>
  </data>
  <data name="lblSelectlangages" xml:space="preserve">
    <value>Select a language</value>
  </data>
  <data name="lblSpanishlangage" xml:space="preserve">
    <value>Español</value>
  </data>
  <data name="lblStandardprice" xml:space="preserve">
    <value>Standard price :</value>
  </data>
  <data name="lbltextinHeader" xml:space="preserve">
    <value>Make a choice:</value>
  </data>
  <data name="lbltextinHeaderinAllmyChoices" xml:space="preserve">
    <value>Make choices :</value>
  </data>
  <data name="lbltextinHeaderinBillorNot" xml:space="preserve">
    <value>Would you like a receipt?</value>
  </data>
  <data name="lbltextinHeaderinSelectpaymentMethod" xml:space="preserve">
    <value>Total payable :</value>
  </data>
  <data name="lblTextInside" xml:space="preserve">
    <value>total in progress :</value>
  </data>
  <data name="lblTypeofPayement" xml:space="preserve">
    <value>Using Google Pay :</value>
  </data>
  <data name="numberTickets" xml:space="preserve">
    <value>Number of tickets :</value>
  </data>
  <data name="pleasePay" xml:space="preserve">
    <value>Please use the payment method selected.</value>
  </data>
  <data name="radioBtnfiveSpecialticket" xml:space="preserve">
    <value>5 days</value>
  </data>
  <data name="radioBtnoneSpecialticket" xml:space="preserve">
    <value>1 day</value>
  </data>
  <data name="radioBtnreducedPrice" xml:space="preserve">
    <value>Reduced price</value>
  </data>
  <data name="radioBtnStandardprice" xml:space="preserve">
    <value>Standard price</value>
  </data>
  <data name="radioBtnthreeSpecialticket" xml:space="preserve">
    <value>3 days</value>
  </data>
  <data name="textPriceinBasket" xml:space="preserve">
    <value>Price( €) :</value>
  </data>
  <data name="textTotalpriceInmybasket" xml:space="preserve">
    <value>Total prices :</value>
  </data>
  <data name="typeTicket" xml:space="preserve">
    <value>Type of tickets</value>
  </data>
  <data name="validTicketselected" xml:space="preserve">
    <value>Your tickets have been added to the basket.</value>
  </data>
  <data name="zeroTicketselected" xml:space="preserve">
    <value>No tickets selected!</value>
  </data>
  <data name="_nameAirporticket" xml:space="preserve">
    <value>Airport ticket</value>
  </data>
  <data name="_nameChessyDisneyticket" xml:space="preserve">
    <value>Chessy Disney Paris Ticket</value>
  </data>
  <data name="_nameParisVisiteticket" xml:space="preserve">
    <value>Ticket Paris Visite</value>
  </data>
  <data name="_nameReducedticket" xml:space="preserve">
    <value>Reduced price ticket</value>
  </data>
  <data name="_nameStandardticket" xml:space="preserve">
    <value>Standard ticket</value>
  </data>
</root>